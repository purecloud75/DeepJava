public class AboutThread {
}

/*
운영체제에서 실행중인 하나의 애플리케이션은 프로세스라고 한다. 사용자가 애플리케이션을 실행하면 운영체제로부터 실행에 필요한 메모리를 할당받아
애플리케이션의 코드를 실행하는데 이것이 프로세스이다. 하나의 어플이 멀티프로세스를 만들기도 하는데 크롬브라우저를 두 개 실행한 경우가 해당.

멀티태스킹은 두가지 이상의 작업을 동시에 처리하는 것을 말하는데, 운영체제는 멀티태스킹을 할 수 있도록 CPU 및 메모리 자원을 프로세스마다
적절히 할당해주고 병렬로 실행시킨다. 워드로 문서작업하면서 동시에 미디어플레이어로 음악을 듣는 경우가 해당.
워드와 미디어플레이어는 독립된 각각의 메모리를 갖는 프로세스들(멀티프로세스)이다.

하나의 프로세스 내에서 멀티태스킹을 할 수 있는 경우도 있는데, 메신저어플에서 채팅과 파일전송기능을 혹은 미디어플레이어에서 음악듣기와
동영상보기의 기능을 수행하기도 한다. 하나의 어플에서 멀티태스킹이 가능한 이유는 바로 멀티스레드 덕분이다.

스레드란 한 가지 작업을 실행하기 위해 순차적으로 실행할 코드를 말한다. 하나의 스레드는 하나의 코드실행흐름이기에
한 프로세스 내에 스레드가 2개라면, 2개의 코드실행흐름이 생긴다는 의미이다. 멀티스레드는 하나의 프로세스 내부에 생기기에
어느 한 스레드가 예외를 발생시키면 프로세스 자체가 종료될 수 있어서 다른스레드에 피해를 준다. 각각의 스레드마다 예외처리를 잘 해줘야 한다.

메인스레드는 main()을 실행하면서 시작된다. 첫코드부터 순차적으로 아래로가서 마지막코드를 실행하면 메인스레드는 종료된다.
메인스레드는 필요에 따라 작업 스레드들을 만들어서 병렬로 코드를 실행할 수 있다. 이게 멀티스레드 생성을 해서 멀티태스킹을 수행하는 것이다.

메인스레드는 항상 존재하기에, 메인작업 이외에 추가적인 병렬작업의 수만큼만 스레드를 생성하면 된다.
작업스레드 생성은 이 친구역시 객체로 생성되기에 클래스가 필요하다.
java.lang.Thread 클래스를 직접 객체화해서 생성해도 되지만, Thread 클래스르 상속해서 하위클래스를 만들어 생성 할수도 있다.
 */